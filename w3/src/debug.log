zh@zh-virtual-machine:~/Desktop/Qualcomm_intern/w3/src$ valgrind --tool=memcheck ./main
==5531== Memcheck, a memory error detector
==5531== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5531== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==5531== Command: ./main
==5531== 
Original array: 1 2 3 4 5 
==5531== Invalid write of size 4
==5531==    at 0x1092C8: main (main.c:26)
==5531==  Address 0x4a96054 is 0 bytes after a block of size 20 alloc'd
==5531==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==5531==    by 0x10923F: main (main.c:12)
==5531== 
Modified array: 1 2 3 4 5 
==5531== 
==5531== HEAP SUMMARY:
==5531==     in use at exit: 0 bytes in 0 blocks
==5531==   total heap usage: 2 allocs, 2 frees, 1,044 bytes allocated
==5531== 
==5531== All heap blocks were freed -- no leaks are possible
==5531== 
==5531== For lists of detected and suppressed errors, rerun with: -s
==5531== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

zh@zh-virtual-machine:~/Desktop/Qualcomm_intern/w3/src$ gdb ./main
GNU gdb (Ubuntu 12.1-0ubuntu1~22.04.2) 12.1
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main...
(gdb) b 25
Breakpoint 1 at 0x12b8: file main.c, line 25.
(gdb) r
Starting program: /home/zh/Desktop/Qualcomm_intern/w3/src/main 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Original array: 1 2 3 4 5 

Breakpoint 1, main () at main.c:25
25	    int *ptr = array + 5; 
(gdb) p *ptr
$1 = -98693133
(gdb) p array
$2 = (int *) 0x5555555592a0
(gdb) p ptr
$3 = (int *) 0x5555555550e0 <_start>
(gdb) p (array+5)
$4 = (int *) 0x5555555592b4
(gdb) p *(array+5)
$5 = 0
(gdb) rwatch *ptr
Hardware read watchpoint 2: *ptr
(gdb) c
Continuing.

Hardware read watchpoint 2: *ptr

Value = 0
main () at main.c:26
26	    *ptr = 10; 
(gdb) c
Continuing.

Hardware read watchpoint 2: *ptr

Value = 0

Hardware read watchpoint 2: *ptr

Value = 0
0x00005555555552c8 in main () at main.c:26
26	    *ptr = 10; 
(gdb) c
Continuing.

Hardware read watchpoint 2: *ptr

Value = 10
main () at main.c:28
28	    printf("Modified array: ");
(gdb) c
Continuing.
Modified array: 1 2 3 4 5 

